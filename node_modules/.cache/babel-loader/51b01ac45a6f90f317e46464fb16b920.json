{"ast":null,"code":"var _jsxFileName = \"/Users/ziyadashraf/Documents/EFG React/src/components/Mixed/Header.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  _s();\n\n  const [white, setWhite] = useState(false);\n  useEffect(() => {\n    if (props.class === 'black') {\n      setWhite(true);\n    }\n\n    return () => setWhite(false);\n  });\n  const c = white ? \"headers-holder black\" : \"headers-holder\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: c,\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"headers\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"00eD8wOX4KHitLi309K300CBgeI=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/ziyadashraf/Documents/EFG React/src/components/Mixed/Header.js"],"names":["useEffect","useState","Header","props","white","setWhite","class","c","title"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIG,KAAK,CAACG,KAAN,KAAgB,OAApB,EAA6B;AACzBD,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AAED,WAAO,MACHA,QAAQ,CAAC,KAAD,CADZ;AAIH,GAVQ,CAAT;AAYA,QAAME,CAAC,GAAGH,KAAK,GAAG,sBAAH,GAA4B,gBAA3C;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEG,CAAhB;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA,gBAA0BJ,KAAK,CAACK;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxBD;;GAAMN,M;;KAAAA,M;AA0BN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\"\n\nconst Header = (props) => {\n\n    const [white, setWhite] = useState(false)\n\n    useEffect(() => {\n\n        if (props.class === 'black') {\n            setWhite(true);\n        }\n\n        return () => (\n            setWhite(false)\n        )\n\n    })\n\n    const c = white ? \"headers-holder black\" : \"headers-holder\"\n\n    return (\n        <div className={c} >\n            <h2 className=\"headers\" >{props.title}</h2>\n        </div>\n    )\n\n}\n\nexport default Header"]},"metadata":{},"sourceType":"module"}