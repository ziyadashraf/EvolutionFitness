{"ast":null,"code":"var _jsxFileName = \"/Users/ziyadashraf/Documents/EFG React/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  _s();\n\n  const [white, setWhite] = useState(false);\n  const [data, setData] = useState(\"fade-up\");\n  useEffect(() => {\n    if (props.class === 'black') {\n      setWhite(true);\n    }\n\n    if (props.data == \"no\") {\n      setData(\"\");\n    }\n\n    return () => (setWhite(false), setData(\"fade-up\"));\n  });\n  const c = white ? \"headers-holder black \" : \"headers-holder\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: c,\n    children: [typeof props.title === 'string' && props.element !== 'classes' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"info-headers\",\n      \"data-aos\": data,\n      children: props.title.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), typeof props.title !== 'string' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"info-headers\",\n      \"data-aos\": data,\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), props.element === 'classes' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"info-headers\",\n      \"data-aos\": data,\n      style: {\n        fontWeight: 500\n      },\n      children: props.title.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"mE6FX9dYVqVCMAeNYBI0vSe8VGI=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/ziyadashraf/Documents/EFG React/src/components/Header.js"],"names":["useEffect","useState","Header","props","white","setWhite","data","setData","class","c","title","element","toUpperCase","fontWeight"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,SAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIG,KAAK,CAACK,KAAN,KAAgB,OAApB,EAA6B;AACzBH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AAED,QAAIF,KAAK,CAACG,IAAN,IAAc,IAAlB,EAAwB;AACpBC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AAED,WAAO,OACHF,QAAQ,CAAC,KAAD,CAAR,EACAE,OAAO,CAAC,SAAD,CAFJ,CAAP;AAKH,GAfQ,CAAT;AAiBA,QAAME,CAAC,GAAGL,KAAK,GAAG,uBAAH,GAA6B,gBAA5C;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEK,CAAhB;AAAA,eACK,OAAON,KAAK,CAACO,KAAb,KAAuB,QAAvB,IAAmCP,KAAK,CAACQ,OAAN,KAAkB,SAArD,iBACG;AAAI,MAAA,SAAS,EAAC,cAAd;AAA6B,kBAAUL,IAAvC;AAAA,gBAA8CH,KAAK,CAACO,KAAN,CAAYE,WAAZ;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFR,EAIK,OAAOT,KAAK,CAACO,KAAb,KAAuB,QAAvB,iBACG;AAAI,MAAA,SAAS,EAAC,cAAd;AAA6B,kBAAUJ,IAAvC;AAAA,gBAA8CH,KAAK,CAACO;AAApD;AAAA;AAAA;AAAA;AAAA,YALR,EAQQP,KAAK,CAACQ,OAAN,KAAkB,SAAlB,iBACA;AAAI,MAAA,SAAS,EAAC,cAAd;AAA6B,kBAAUL,IAAvC;AAA6C,MAAA,KAAK,EAAE;AAAEO,QAAAA,UAAU,EAAE;AAAd,OAApD;AAAA,gBAA0EV,KAAK,CAACO,KAAN,CAAYE,WAAZ;AAA1E;AAAA;AAAA;AAAA;AAAA,YATR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA1CD;;GAAMV,M;;KAAAA,M;AA4CN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\"\n\nconst Header = (props) => {\n\n    const [white, setWhite] = useState(false)\n    const [data, setData] = useState(\"fade-up\")\n\n    useEffect(() => {\n\n        if (props.class === 'black') {\n            setWhite(true);\n        }\n\n        if (props.data == \"no\") {\n            setData(\"\");\n        }\n\n        return () => (\n            setWhite(false),\n            setData(\"fade-up\")\n        )\n\n    })\n\n    const c = white ? \"headers-holder black \" : \"headers-holder\"\n\n    return (\n        <div className={c} >\n            {typeof props.title === 'string' && props.element !== 'classes' &&\n                <h2 className=\"info-headers\" data-aos={data}>{props.title.toUpperCase()}</h2>\n            }\n            {typeof props.title !== 'string' &&\n                <h2 className=\"info-headers\" data-aos={data}>{props.title}</h2>\n            }\n            {\n                props.element === 'classes' &&\n                <h2 className=\"info-headers\" data-aos={data} style={{ fontWeight: 500 }}>{props.title.toUpperCase()}</h2>\n\n            }\n\n        </div>\n    )\n\n\n}\n\nexport default Header"]},"metadata":{},"sourceType":"module"}