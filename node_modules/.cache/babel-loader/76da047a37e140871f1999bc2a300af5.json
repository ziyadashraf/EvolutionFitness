{"ast":null,"code":"var _jsxFileName = \"/Users/ziyadashraf/Documents/EFG React/src/components/TrainerInfos.js\",\n    _s = $RefreshSig$();\n\nimport CountUp from 'react-countup';\nimport { Trainers } from \"./Data\";\nimport { useEffect, useState } from \"react\";\nimport CertificateIcon from \"../images/certificate.png\";\nimport ExperienceIcon from \"../images/experience.png\";\nimport RunningIcon from \"../images/running.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TrainerInfos = props => {\n  _s();\n\n  const [details, setDetails] = useState([]);\n  const trainerInfo = [{\n    id: \"info-certificates\",\n    title: 'Certificates',\n    icon: CertificateIcon\n  }, {\n    id: \"info-experience\",\n    title: 'Years of \\n experience',\n    icon: ExperienceIcon\n  }, {\n    id: \"info-trainees\",\n    title: 'trainees',\n    icon: RunningIcon\n  }];\n  useEffect(() => {\n    setDetails(trainerInfo);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"three-gym-info\",\n    children: details.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gym-info\",\n        id: data.id,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-holders\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"info-icon\",\n            src: data.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-holders\",\n          children: [data.id === \"info-certificates\" && Trainers.map(trainer => props.id === trainer.id && /*#__PURE__*/_jsxDEV(CountUp, {\n            start: trainer.certificates.start,\n            end: trainer.certificates.no,\n            delay: 0,\n            duration: trainer.certificates.duration,\n            enableScrollSpy: true,\n            children: ({\n              countUpRef\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-number\",\n                ref: countUpRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 98\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 45\n            }, this)\n          }, trainer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this)), data.id === \"info-experience\" && Trainers.map(trainer => props.id === trainer.id && /*#__PURE__*/_jsxDEV(CountUp, {\n            start: trainer.experience.start,\n            end: trainer.experience.no,\n            delay: 0,\n            duration: trainer.experience.duration,\n            enableScrollSpy: true,\n            children: ({\n              countUpRef\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-number\",\n                ref: countUpRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 98\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 45\n            }, this)\n          }, trainer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this)), data.id === \"info-trainees\" && Trainers.map(trainer => props.id === trainer.id && /*#__PURE__*/_jsxDEV(CountUp, {\n            start: trainer.trainees.start,\n            end: trainer.trainees.no,\n            delay: 0,\n            duration: trainer.trainees.duration,\n            enableScrollSpy: true,\n            children: ({\n              countUpRef\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-number\",\n                ref: countUpRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 98\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 45\n            }, this)\n          }, trainer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info-desc\",\n            children: data.title.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TrainerInfos, \"2ca5BbBEuRMF5gofyWl7Da9A+Q8=\");\n\n_c = TrainerInfos;\nexport default TrainerInfos;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrainerInfos\");","map":{"version":3,"sources":["/Users/ziyadashraf/Documents/EFG React/src/components/TrainerInfos.js"],"names":["CountUp","Trainers","useEffect","useState","CertificateIcon","ExperienceIcon","RunningIcon","TrainerInfos","props","details","setDetails","trainerInfo","id","title","icon","map","data","trainer","certificates","start","no","duration","countUpRef","experience","trainees","toUpperCase"],"mappings":"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","sourcesContent":["import CountUp from 'react-countup';\nimport { Trainers } from \"./Data\";\nimport { useEffect, useState } from \"react\";\nimport CertificateIcon from \"../images/certificate.png\"\nimport ExperienceIcon from \"../images/experience.png\"\nimport RunningIcon from \"../images/running.png\"\n\n\nconst TrainerInfos = (props) => {\n\n\n    const [details, setDetails] = useState([])\n\n    const trainerInfo = [{\n        id: \"info-certificates\",\n        title: 'Certificates',\n        icon: CertificateIcon,\n\n    },\n    {\n        id: \"info-experience\",\n        title: 'Years of \\n experience',\n        icon: ExperienceIcon,\n\n\n    },\n    {\n        id: \"info-trainees\",\n        title: 'trainees',\n        icon: RunningIcon,\n\n\n\n    }]\n\n    useEffect(() => {\n\n        setDetails(trainerInfo)\n\n\n    })\n\n\n\n\n    return (\n        <div className=\"three-gym-info\">\n            {details.map((data) => {\n                return (\n                    <div className=\"gym-info\" key={data.id} id={data.id}>\n\n\n                        <div className=\"info-holders\">\n                            <img className=\"info-icon\" src={data.icon} />\n                        </div>\n                        <div className=\"info-holders\">\n\n                            {data.id === \"info-certificates\" &&\n                                Trainers.map((trainer) => props.id === trainer.id &&\n                                    <CountUp start={trainer.certificates.start} end={trainer.certificates.no} delay={0} duration={trainer.certificates.duration} key={trainer.id} enableScrollSpy>\n                                        {({ countUpRef }) => (\n                                            <div>\n                                                <span className=\"info-number\" ref={countUpRef} /><br />\n                                            </div>\n                                        )}\n                                    </CountUp>\n                                )\n                            }\n\n                            {data.id === \"info-experience\" &&\n                                Trainers.map((trainer) => props.id === trainer.id &&\n                                    <CountUp start={trainer.experience.start} end={trainer.experience.no} delay={0} duration={trainer.experience.duration} key={trainer.id} enableScrollSpy>\n                                        {({ countUpRef }) => (\n                                            <div>\n                                                <span className=\"info-number\" ref={countUpRef} /><br />\n                                            </div>\n                                        )}\n                                    </CountUp>\n                                )\n                            }\n\n                            {data.id === \"info-trainees\" &&\n                                Trainers.map((trainer) => props.id === trainer.id &&\n                                    <CountUp start={trainer.trainees.start} end={trainer.trainees.no} delay={0} duration={trainer.trainees.duration} key={trainer.id} enableScrollSpy>\n                                        {({ countUpRef }) => (\n                                            <div>\n                                                <span className=\"info-number\" ref={countUpRef} /><br />\n                                            </div>\n                                        )}\n                                    </CountUp>\n                                )\n                            }\n\n                            <span className=\"info-desc\">{data.title.toUpperCase()}</span>\n                        </div>\n                    </div>\n                )\n            })}\n\n        </div>\n    )\n\n}\n\nexport default TrainerInfos;"]},"metadata":{},"sourceType":"module"}